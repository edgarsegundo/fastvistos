---
// JsonLdWebPage.astro - Structured data for WebPage schema
// Now uses centralized config instead of hardcoded values
export interface Props {
    seoConfig: {
        jsonLd?: {
            webPage?: {
                name: string;
                description: string;
            };
        };
        company: {
            name: string;
            logo: string;
        };
        site: {
            url: string;
        };
        openGraph: {
            url: string;
            image: string;
        };
    };
}

const { seoConfig } = Astro.props;

// Prepare schema only if webPage data exists
let schema = null;
if (seoConfig.jsonLd?.webPage) {
    const webPageData = seoConfig.jsonLd.webPage;
    schema = {
        '@context': 'https://schema.org',
        '@type': 'WebPage',
        name: webPageData.name,
        url: seoConfig.openGraph.url,
        description: webPageData.description,
        publisher: {
            '@type': 'Organization',
            name: seoConfig.company.name,
            logo: {
                '@type': 'ImageObject',
                url: seoConfig.company.logo,
            },
            url: seoConfig.site.url,
        },
        image: seoConfig.openGraph.image,
    };
}
---

{schema && <script type="application/ld+json" set:html={JSON.stringify(schema)} />}
