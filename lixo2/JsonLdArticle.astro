---
// JsonLdArticle.astro - Structured data for Article schema (for blog posts)
export interface Props {
    headline: string;
    description: string;
    url: string;
    datePublished: string;
    dateModified?: string;
    author?: {
        name: string;
        url?: string;
    };
    publisher?: {
        name: string;
        logo: string;
        url: string;
    };
    image?: string;
    articleSection?: string;
    wordCount?: number;
}

const {
    headline,
    description,
    url,
    datePublished,
    dateModified = datePublished,
    author = {
        name: 'Fast Vistos',
        url: 'https://fastvistos.com.br',
    },
    publisher = {
        name: 'Fast Vistos',
        logo: 'https://fastvistos.com.br/assets/images/logo/logo-desktop.png',
        url: 'https://fastvistos.com.br',
    },
    image = 'https://fastvistos.com.br/favicon.png',
    articleSection = 'Vistos',
    wordCount,
} = Astro.props;

const schema = {
    '@context': 'https://schema.org',
    '@type': 'Article',
    headline: headline,
    description: description,
    url: url,
    datePublished: datePublished,
    dateModified: dateModified,
    author: {
        '@type': 'Person',
        name: author.name,
        ...(author.url && { url: author.url }),
    },
    publisher: {
        '@type': 'Organization',
        name: publisher.name,
        logo: {
            '@type': 'ImageObject',
            url: publisher.logo,
        },
        url: publisher.url,
    },
    image: {
        '@type': 'ImageObject',
        url: image,
    },
    articleSection: articleSection,
    ...(wordCount && { wordCount: wordCount }),
};
---

<script type="application/ld+json" set:html={JSON.stringify(schema)} />
