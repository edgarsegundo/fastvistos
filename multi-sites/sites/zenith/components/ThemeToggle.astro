---
// Theme Switcher Component
---

<button class="theme-toggle" id="theme-toggle" aria-label="Toggle theme">
    <span id="theme-icon">🌙</span>
    <span id="theme-text">Dark</span>
</button>

<script>
    // Theme management functions
    function getStoredTheme() {
        return localStorage.getItem('theme');
    }

    function getSystemTheme() {
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    }

    function getCurrentTheme() {
        return document.documentElement.getAttribute('data-theme') || getSystemTheme();
    }

    function setTheme(theme) {
        if (theme === 'auto') {
            document.documentElement.removeAttribute('data-theme');
            localStorage.removeItem('theme');
        } else {
            document.documentElement.setAttribute('data-theme', theme);
            localStorage.setItem('theme', theme);
        }
        updateThemeToggle();
    }

    function updateThemeToggle() {
        const currentTheme = getCurrentTheme();
        const themeIcon = document.getElementById('theme-icon');
        const themeText = document.getElementById('theme-text');
        
        if (themeIcon && themeText) {
            if (currentTheme === 'dark') {
                themeIcon.textContent = '☀️';
                themeText.textContent = 'Light';
            } else {
                themeIcon.textContent = '🌙';
                themeText.textContent = 'Dark';
            }
        }
    }

    function toggleTheme() {
        const currentTheme = getCurrentTheme();
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        setTheme(newTheme);
    }

    // Initialize theme on load
    function initializeTheme() {
        const storedTheme = getStoredTheme();
        if (storedTheme) {
            setTheme(storedTheme);
        } else {
            // Use system preference
            setTheme('auto');
        }
        
        // Listen for system theme changes
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
            if (!getStoredTheme()) {
                updateThemeToggle();
            }
        });
    }

    // Event listeners
    document.addEventListener('DOMContentLoaded', () => {
        initializeTheme();
        
        const toggleButton = document.getElementById('theme-toggle');
        if (toggleButton) {
            toggleButton.addEventListener('click', toggleTheme);
        }
    });

    // Make functions globally available if needed
    window.themeUtils = {
        setTheme,
        getCurrentTheme,
        toggleTheme
    };
</script>

<style>
    .theme-toggle {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        font-weight: 500;
    }
    
    #theme-icon {
        font-size: 1rem;
    }
</style>
