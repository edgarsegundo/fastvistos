---
import { BlogService } from '../../lib/blog-service.js';
import { siteConfig } from '../../site-config.ts';

// Generate static paths for all articles
export async function getStaticPaths() {
  const siteId = 'vibecode';
  const articles = await BlogService.getArticles(siteId, 100);
  
  return articles.map((article: any) => ({
    params: { slug: article.slug },
    props: { article }
  }));
}

// Get the article from props and site configuration
const { article } = Astro.props;
// siteConfig imported directly
const siteId = import.meta.env.SITE_ID || 'fastvistos';

const title = `${article.title} - ${siteConfig.name} Blog`;
const description = article.excerpt;
---

<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="description" content={description} />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <title>{title}</title>
  
  <!-- Open Graph -->
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:type" content="article" />
  
  <!-- JSON-LD -->
  <script type="application/ld+json" set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    "headline": article.title,
    "description": article.excerpt,
    "author": {
      "@type": "Person",
      "name": article.author
    },
    "datePublished": article.publishedAt,
    "dateModified": article.updatedAt || article.publishedAt,
    "publisher": {
      "@type": "Organization",
      "name": siteConfig.name
    }
  })} />
</head>
<body class="blog-post">
  <!-- Simple Navigation -->
  <nav class="bg-white shadow-sm border-b">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between h-16">
        <div class="flex items-center">
          <a href="/" class="text-xl font-bold" style={`color: ${siteConfig.brandColor};`}>
            {siteConfig.name}
          </a>
        </div>
        <div class="flex items-center space-x-8">
          <a href="/" class={`text-gray-600 transition-colors ${siteConfig.linkColor}`}>Home</a>
          <a href="/blog" class={`text-gray-600 transition-colors ${siteConfig.linkColor}`}>Blog</a>
        </div>
      </div>
    </div>
  </nav>

  <!-- Breadcrumb -->
  <div class="bg-gray-50 border-b">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
      <nav class="text-sm">
        <a href="/" class="text-gray-500 hover:text-gray-700">Home</a>
        <span class="mx-2 text-gray-400">/</span>
        <a href="/blog" class="text-gray-500 hover:text-gray-700">Blog</a>
        <span class="mx-2 text-gray-400">/</span>
        <span class="text-gray-900">{article.title}</span>
      </nav>
    </div>
  </div>

  <!-- Article Content -->
  <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Article Header -->
    <header class="mb-8">
      <div class="flex items-center text-sm text-gray-500 mb-4">
        <time datetime={article.publishedAt}>
          {BlogService.formatDate(article.publishedAt)}
        </time>
        <span class="mx-2">•</span>
        <span>{article.author}</span>
        <span class="mx-2">•</span>
        <span>{article.readingTime || '5'} min de leitura</span>
      </div>
      
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
        {article.title}
      </h1>
      
      <p class="text-xl text-gray-600 mb-6">
        {article.excerpt}
      </p>
      
      <div class="flex flex-wrap gap-2">
        {article.topics.map((topic: any) => (
          <span class={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${siteConfig.tagColor}`}>
            {topic}
          </span>
        ))}
      </div>
    </header>

    <!-- Article Body -->
    <div class="prose prose-lg max-w-none">
      <div set:html={article.content_md || article.content} />
    </div>

    <!-- Article Footer -->
    <footer class="mt-12 pt-8 border-t border-gray-200">
      <div class="flex items-center justify-between">
        <div class="text-sm text-gray-500">
          Publicado em {BlogService.formatDate(article.publishedAt)}
          {article.updatedAt && article.updatedAt !== article.publishedAt && (
            <span> • Atualizado em {BlogService.formatDate(article.updatedAt)}</span>
          )}
        </div>
        <div class="flex items-center space-x-4">
          <a 
            href="/blog"
            class={`inline-flex items-center px-4 py-2 text-sm font-medium transition-colors ${siteConfig.buttonColor} text-white rounded-lg`}
          >
            ← Voltar ao Blog
          </a>
        </div>
      </div>
    </footer>
  </article>

  <!-- Related Articles -->
  <section class="bg-gray-50 py-16">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-3xl font-bold text-gray-900 mb-8 text-center">
        Artigos Relacionados
      </h2>
      <div class="grid md:grid-cols-3 gap-8">
        <!-- This could be populated with related articles based on topics -->
        <div class="bg-white rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-2">
            Mais Artigos em Breve
          </h3>
          <p class="text-gray-600 text-sm">
            Estamos trabalhando em mais conteúdo especializado para você.
          </p>
          <a 
            href="/blog"
            class={`inline-flex items-center mt-4 text-sm font-medium ${siteConfig.linkColor}`}
          >
            Ver todos os artigos →
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class={`py-16 bg-gradient-to-br ${siteConfig.gradientFrom} ${siteConfig.gradientTo}`}>
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <h2 class="text-3xl font-bold text-white mb-4">
        {siteConfig.ctaTitle}
      </h2>
      <p class={`text-xl ${siteConfig.accentColor} mb-8 max-w-2xl mx-auto`}>
        {siteConfig.ctaSubtitle}
      </p>
      <a 
        href="/#contato"
        class="inline-flex items-center px-8 py-3 border-2 border-white text-white font-bold rounded-lg hover:bg-white transition-all duration-300"
        style={`hover-color: ${siteConfig.brandColor};`}
      >
        {siteConfig.ctaButton}
      </a>
    </div>
  </section>

  <!-- Simple Footer -->
  <footer class="bg-gray-50 border-t">
    <div class="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
      <div class="text-center">
        <p class="text-gray-500">© {siteConfig.year} {siteConfig.name}. Todos os direitos reservados.</p>
      </div>
    </div>
  </footer>
</body>
</html>
