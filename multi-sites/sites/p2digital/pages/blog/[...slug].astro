---
/**
 * ðŸš¨ AUTO-GENERATED FILE. DO NOT EDIT.
 * This file is generated by sync-blog.js and will be overwritten.
 * To customize, edit the template.
 */

import { getCollection } from 'astro:content';
import SharedBlogLayout from '../../layouts/SharedBlogLayout.astro';
import TableOfContents from '../../components/TableOfContents.astro';
import SidebarAbove from '../../components/SidebarAbove.astro';
import SidebarBelow from '../../components/SidebarBelow.astro';
import { siteConfig } from '../../site-config.ts';
import '../../styles/markdown-blog.css';

// Generate static paths from the markdown files in content/blog/
export async function getStaticPaths() {
    const blogEntries = await getCollection('blog');

    return blogEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

// Get the markdown entry from props
const { entry } = Astro.props;

// Render the markdown content
const { Content, headings } = await entry.render();

const title = `${entry.data.title} - ${siteConfig.name} Blog`;
const description = entry.data.description || entry.data.title;
---

<SharedBlogLayout title={title} description={description}>
    <div class="blog-layout-container">
        
        <article class="blog-article">
            <header class="article-header">
                <h1 class="article-title">{entry.data.title}</h1>

                <div class="article-meta">
                    <time datetime={entry.data.pubDate}>
                        {
                            new Date(entry.data.pubDate).toLocaleDateString('pt-BR', {
                                year: 'numeric',
                                month: 'long',
                                day: 'numeric',
                            })
                        }
                    </time>

                    {entry.data.topic && <span class="article-topic">{entry.data.topic}</span>}
                </div>

                {
                    entry.data.image && entry.data.image !== '/assets/images/blog/' && (
                        <img src={entry.data.image} alt={entry.data.title} class="article-image" />
                    )
                }
            </header>

            
            <div class="blog-content">
                <Content />
            </div>
        </article>

        
        <aside class="sidebar-container">
            
            <SidebarAbove />

            
            <TableOfContents headings={headings} />

            
            <SidebarBelow />
        </aside>
    </div>
</SharedBlogLayout>

<style>
    .blog-layout-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 2rem;
        display: grid;
        grid-template-columns: 1fr 300px;
        gap: 3rem;
        align-items: start;
    }

    .blog-article {
        min-width: 0; /* Prevents grid overflow */
    }

    .sidebar-container {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    /* Responsive Design */
    @media (max-width: 1024px) {
        .blog-layout-container {
            grid-template-columns: 1fr;
            gap: 2rem;
            padding: 1.5rem;
        }
    }

    @media (max-width: 768px) {
        .blog-layout-container {
            padding: 1rem;
            gap: 1.5rem;
        }
    }
</style>
