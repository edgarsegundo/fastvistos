---
/**
 * JsonLdBlogPost.astro
 * Gera JSON-LD para um BlogPosting (artigo/post), extens√≠vel com mentions, interactionStatistic, comment, etc.
 */
import { normalizeAssetsUrlBase } from '../lib/utils.ts';
import { getImageObjectBlock } from './JsonLdImageObjectBlock.astro';
import { getWebSiteBlock } from './JsonLdWebSiteBlock.astro';
import { getOrganizationBlock } from './JsonLdOrganizationBlock.astro';
import { getWebPageBlock } from './JsonLdWebPageBlock.astro';
import { getBreadcrumbBlock } from './JsonLdBreadcrumbBlock.astro';
import { slugify } from '../lib/utils.ts';

const {
    site,
    blogConfigFromDb,
    articleFromDb,
    pubDate,
    updatedDate,
    wordCount,
    breadcrumbList = [],
    mentions = [],
    interactionStatistic = [],
    comment = [],
    extraGraph = [],
    customData,
} = Astro.props;

const homepageUrl = normalizeAssetsUrlBase(site.domain);
const postpageUrl = `${homepageUrl}/blog/${articleFromDb.slug}`;
const author_name = slugify(articleFromDb.author_name || 
      blogConfigFromDb.author_name || 
      site.author || site.name);

const imageObjectBlock = getImageObjectBlock({
    disableImageObject: false,
    site,
    imageId: null, // passing null to signal getImageObjectBlock to use url as @id
    image: blogConfigFromDb.image,
    imageUrl: blogConfigFromDb.seo_image_url,
    caption: blogConfigFromDb.seo_image_caption,
    width: blogConfigFromDb.seo_image_width,
    height: blogConfigFromDb.seo_image_height,
});

const primaryImageObjectBlock = getImageObjectBlock({
    disableImageObject: false,
    site,
    imageId: `${postpageUrl}#primaryimage`, // passing null to signal getImageObjectBlock to use url as @id
    image: blogConfigFromDb.image,
    imageUrl: blogConfigFromDb.seo_image_url,
    caption: blogConfigFromDb.seo_image_caption,
    width: blogConfigFromDb.seo_image_width,
    height: blogConfigFromDb.seo_image_height,
});

// WebPage block
const webPageBlock = getWebPageBlock({
    disableWebPage: false,
    pageUrl: postpageUrl,
    siteName: blogConfigFromDb.title || site.name,
    websiteId: `${homepageUrl}#website`,
    orgId: `${homepageUrl}#organization`,
    imageId: `${postpageUrl}#image`,
    breadcrumbId: `${postpageUrl}#breadcrumb`,
    site: site,
    description: articleFromDb.seo_description,
});


const breadcrumbId = `${postpageUrl}#breadcrumb`;

// BreadcrumbList
const breadcrumbBlock = getBreadcrumbBlock({
    disableBreadcrumb: false,
    breadcrumbId,
    breadcrumbList,
    homepageUrl,
});


const websiteId = `${homepageUrl}#website`;
const orgId = `${homepageUrl}#organization`;

// WebSite
const webSiteBlock = getWebSiteBlock({
    disableWebSite: false,
    disableWebSiteSearchAction: true,
    websiteId,
    homepageUrl,
    siteName: site?.name,
    description: site?.description,
    orgId,
    site,
});


const org = site?.organization ?? {
    name: site?.name,
    url: homepageUrl,
    logo: site?.logo,
};

// Organization (with logo as ImageObject)
const orgBlock = getOrganizationBlock({
    disableOrganization: false,
    orgId,
    org,
    logoId: `${homepageUrl}#logo`,
    site,
});

// https://fastvistos.com.br/#/schema/person/maria-oliveira
const baseGraph = [
    {
        '@type': 'BlogPosting', // or Article?
        '@id': `${postpageUrl}#article`,
        isPartOf: { '@id': `${postpageUrl}` },
        author: { '@id': `${homepageUrl}/schema/person/${author_name}` },
        headline: articleFromDb.title,
        description: articleFromDb.seo_description,
        datePublished: pubDate,
        dateModified: updatedDate,
        mainEntityOfPage: { '@id': `${postpageUrl}` },
        wordCount: wordCount,
        publisher: { '@id': `${homepageUrl}#organization` },
        image: imageObjectBlock ? imageObjectBlock : {},
        primaryImageOfPage: { '@id': imageObjectBlock ? imageObjectBlock.url : undefined },
        thumbnailUrl: imageObjectBlock?.url,
        keywords: {
            // ...other properties
            ...(articleFromDb.seo_keywords
                ? { keywords: [articleFromDb.seo_keywords] }
                : {}),
        },
        articleSection: [`${articleFromDb.blog_topic.title}`],
        inLanguage: 'pt-BR',
    },
    {
        ...webPageBlock,
    },
    {
        primaryImageOfPage: primaryImageObjectBlock ? { ...primaryImageObjectBlock } : {},
    },
    {
        ...breadcrumbBlock,
    },
    {
        ...webSiteBlock,
    },
    {
        ...orgBlock,
    },
];
const advancedGraph = [
    ...(mentions.length ? [{ mentions: mentions }] : []),
    ...(interactionStatistic.length ? [{ interactionStatistic: interactionStatistic }] : []),
    ...(comment.length ? [{ comment: comment }] : []),
    ...extraGraph,
];
const graph = [...baseGraph, ...advancedGraph];
const jsonLd = customData ? customData : { '@context': 'https://schema.org', '@graph': graph };
---

<script type="application/ld+json" set:html={JSON.stringify(jsonLd, null, 2)} />
