---
/**
 * JsonLdBlogPost.astro
 * Gera JSON-LD para um BlogPosting (artigo/post), extens√≠vel com mentions, interactionStatistic, comment, etc.
 */


        //  '@type': 'BlogPosting', // Article?
        // '@id': article.id,  // "https://neilpatel.com/br/blog/reddit-seo-como-usar-o-forum-e-ganhar-autoridade/#article",
        // isPartOf: { "@id": "https://neilpatel.com/br/blog/reddit-seo-como-usar-o-forum-e-ganhar-autoridade/" },
        // author: { '@id': article.author.id },
        // headline: article.title,
        // description: article.description,
        // datePublished: article.datePublished,
        // dateModified: article.dateModified || article.datePublished,
        // mainEntityOfPage: { '@id': article.url },
        // wordCount: 1907,
        // publisher: { '@id': article.publisher.id },
        // image: {},
        // thumbnailUrl: "https://neilpatel.com/wp-content/uploads/2025/09/image-63.png",
        // keywords: ["Reddit SEO"],
        // articleSection: ["SEO"],
        // inLanguage: article.inLanguage,



const {
    site,
    article,
    mentions = [],
    interactionStatistic = [],
    comment = [],
    extraGraph = [],
    customData,
} = Astro.props;

const baseGraph = [
    {
        '@type': 'BlogPosting', // Article?
        '@id': article.id,  // "https://neilpatel.com/br/blog/reddit-seo-como-usar-o-forum-e-ganhar-autoridade/#article",
        isPartOf: { "@id": "https://neilpatel.com/br/blog/reddit-seo-como-usar-o-forum-e-ganhar-autoridade/" },
        author: { '@id': article.author.id },
        headline: article.title,
        description: article.description,
        datePublished: article.datePublished,
        dateModified: article.dateModified || article.datePublished,
        mainEntityOfPage: { '@id': article.url },
        wordCount: 1907,
        publisher: { '@id': article.publisher.id },
        image: {},
        thumbnailUrl: "https://neilpatel.com/wp-content/uploads/2025/09/image-63.png",
        keywords: ["Reddit SEO"],
        articleSection: ["SEO"],
        inLanguage: article.inLanguage,
    },
    {
        '@type': 'Person',
        '@id': article.author.id,
        name: article.author.name,
        url: article.author.url,
        sameAs: article.author.sameAs,
    },
    {
        '@type': 'Organization',
        '@id': article.publisher.id,
        name: article.publisher.name,
        logo: article.publisher.logo,
    },
];
const advancedGraph = [
    ...(mentions.length ? [{ mentions: mentions }] : []),
    ...(interactionStatistic.length ? [{ interactionStatistic: interactionStatistic }] : []),
    ...(comment.length ? [{ comment: comment }] : []),
    ...extraGraph,
];
const graph = [...baseGraph, ...advancedGraph];
const jsonLd = customData ? customData : { '@context': 'https://schema.org', '@graph': graph };
---

<script type="application/ld+json" set:html={JSON.stringify(jsonLd, null, 2)} />
