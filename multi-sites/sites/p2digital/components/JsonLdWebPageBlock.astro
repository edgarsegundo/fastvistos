---
import { siteConfig } from '../site-config.ts';

export function getWebPageBlock({
    disableWebPage,
    pageUrl,
    siteName,
    websiteId,
    orgId,
    imageId,
    breadcrumbId,
    description,
    pubDate,
    updatedDate,
    hasPartList = [],
    disableHasPart = true,
}: {
    disableWebPage: boolean;
    pageUrl: string;
    siteName: string;
    websiteId: string;
    orgId: string;
    imageId: string;
    breadcrumbId: string;
    description?: string;
    pubDate?: string | null;
    updatedDate?: string | null;
    hasPartList?: any[];
    disableHasPart?: boolean;
}) {
    if (disableWebPage) return null;
    return {
        '@type': 'WebPage',
        '@id': pageUrl,
        url: pageUrl,
        name: siteName,
        isPartOf: { '@id': websiteId },
        about: { '@id': orgId },
        primaryImageOfPage: { '@id': imageId },
        image: { '@id': imageId },
        // ...(site?.thumbnailUrl
        //     ? { thumbnailUrl: site.thumbnailUrl }
        //     : site?.image
        //       ? { thumbnailUrl: site.image }
        //       : {}),
        ...(pubDate ? { datePublished: pubDate } : {}),
        ...(updatedDate ? { dateModified: updatedDate } : {}),
        description: description,
        breadcrumb: { '@id': breadcrumbId },
        inLanguage: siteConfig.site?.localte || 'pt_BR',
        potentialAction: [
            {
                '@type': 'ReadAction',
                target: [pageUrl],
            },
        ],
        // Only add hasPart if not disabled and hasPartList is a non-empty array
        ...(!disableHasPart && Array.isArray(hasPartList) && hasPartList.length > 0
            ? { hasPart: hasPartList }
            : {}),
    };
}
---
