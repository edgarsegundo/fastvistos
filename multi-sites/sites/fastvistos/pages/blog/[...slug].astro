---
import { getCollection } from 'astro:content';
import SharedBlogLayout from '../../layouts/SharedBlogLayout.astro';
import { siteConfig } from '../../site-config.ts';

// Generate static paths from the markdown files in content/blog/
export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry }
  }));
}

// Get the markdown entry from props
const { entry } = Astro.props;

// Render the markdown content
const { Content } = await entry.render();

const title = `${entry.data.title} - ${siteConfig.name} Blog`;
const description = entry.data.description || entry.data.title;
---

<SharedBlogLayout 
    title={title}
    description={description}
>
    <article class="prose prose-lg max-w-4xl mx-auto px-4">
        <header class="mb-8">
            <h1 class="text-4xl font-bold mb-4">{entry.data.title}</h1>
            
            <div class="flex items-center gap-4 text-gray-600 mb-6">
                <time datetime={entry.data.pubDate}>
                    {new Date(entry.data.pubDate).toLocaleDateString('pt-BR')}
                </time>
                
                {entry.data.topic && (
                    <span class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm">
                        {entry.data.topic}
                    </span>
                )}
            </div>

            {entry.data.image && entry.data.image !== "/assets/images/blog/" && (
                <img 
                    src={entry.data.image}
                    alt={entry.data.title}
                    class="w-full h-96 object-cover rounded-lg mb-8"
                />
            )}
        </header>

        <!-- This is where the markdown content gets rendered -->
        <div class="prose-content">
            <Content />
        </div>
    </article>
</SharedBlogLayout>