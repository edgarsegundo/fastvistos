---
/**
 * ðŸš¨ AUTO-GENERATED FILE. DO NOT EDIT.
 * This file is generated by sync-blog.js and will be overwritten.
 * To customize, edit the template.
 */

// FAQ Section Component with inline data
import { WebpageFaqService } from '../lib/webpage-faq';

// Define the FAQ type for better type safety
type Faq = {
    question: string;
    answer: string;
};

let faqData: Faq[] = [];
try {
    faqData = await WebpageFaqService.getPageFaqList(
        'multi-sites/sites/fastvistos/components/FaqSection.astro'
    );
} catch (err) {
    faqData = [];
}

function formatAnswerForDisplay(answer: string) {
    return answer.replace(/\n/g, '<br>');
}
---

<section class="bg-white border-b py-16" id="faq">
    <div class="container max-w-5xl mx-auto m-8">
        <h2
            class="w-full my-2 text-5xl font-bold leading-tight text-center text-gray-800"
            style="color: #1B375C;"
        >
            Perguntas Frequentes
        </h2>
        <div class="w-full mb-4">
            <div
                class="h-1 mx-auto w-64 opacity-25 my-0 py-0 rounded-t"
                style="background-color: #0c59be;"
            >
            </div>
        </div>

        <div class="max-w-4xl mx-auto mt-12">
            {
                faqData.map((faq, index) => (
                    <div class="faq-item border-b border-gray-200 mb-4">
                        <button class="faq-question w-full text-left py-4 px-6 bg-gray-50 hover:bg-gray-100 transition-colors duration-200 rounded-lg mb-2 flex justify-between items-center focus:outline-none focus:ring-2 focus:ring-blue-500">
                            <h3
                                class="text-lg font-semibold text-gray-800"
                                style="color: #1B375C !important;"
                            >
                                {faq.question}
                            </h3>
                            <svg
                                class="faq-icon w-5 h-5 transform transition-transform duration-200"
                                fill="none"
                                stroke="currentColor"
                                viewBox="0 0 24 24"
                            >
                                <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M19 9l-7 7-7-7"
                                />
                            </svg>
                        </button>
                        <div class="faq-answer hidden px-6 pb-4">
                            <p
                                class="text-gray-600 leading-relaxed"
                                set:html={formatAnswerForDisplay(faq.answer)}
                            />
                        </div>
                    </div>
                ))
            }
        </div>
    </div>
</section>

<style>
    .faq-question:hover {
        background-color: #f8f9fa;
    }

    .faq-question[aria-expanded='true'] .faq-icon {
        transform: rotate(180deg);
    }

    .faq-question[aria-expanded='true'] {
        background-color: #e9ecef;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }

    .faq-answer {
        background-color: #f8f9fa;
        border-left: 4px solid #ff8700;
        border-radius: 0 0 0.5rem 0.5rem;
        margin-top: -2px;
    }

    .faq-answer.show {
        display: block;
        animation: slideDown 0.3s ease-out;
    }

    @keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<script is:inline>
    (function () {
        document.addEventListener('DOMContentLoaded', function () {
            var faqQuestions = document.querySelectorAll('.faq-question');

            for (var i = 0; i < faqQuestions.length; i++) {
                var question = faqQuestions[i];
                question.setAttribute('aria-expanded', 'false');

                question.addEventListener('click', function (event) {
                    var currentButton = event.currentTarget;
                    var faqItem = currentButton.closest('.faq-item');
                    var answer = faqItem.querySelector('.faq-answer');
                    var isExpanded = currentButton.getAttribute('aria-expanded') === 'true';

                    // Close all other FAQ items
                    for (var j = 0; j < faqQuestions.length; j++) {
                        var otherQuestion = faqQuestions[j];
                        if (otherQuestion !== currentButton) {
                            var otherFaqItem = otherQuestion.closest('.faq-item');
                            var otherAnswer = otherFaqItem.querySelector('.faq-answer');

                            otherQuestion.setAttribute('aria-expanded', 'false');
                            if (otherAnswer) {
                                otherAnswer.classList.add('hidden');
                                otherAnswer.classList.remove('show');
                            }
                        }
                    }

                    // Toggle current FAQ item
                    if (isExpanded) {
                        currentButton.setAttribute('aria-expanded', 'false');
                        if (answer) {
                            answer.classList.add('hidden');
                            answer.classList.remove('show');
                        }
                    } else {
                        currentButton.setAttribute('aria-expanded', 'true');
                        if (answer) {
                            answer.classList.remove('hidden');
                            answer.classList.add('show');
                        }
                    }
                });
            }
        });
    })();
</script>
