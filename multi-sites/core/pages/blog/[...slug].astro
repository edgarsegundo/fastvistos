---
/**
 * ðŸš¨ AUTO-GENERATED FILE. DO NOT EDIT.
 * This file is generated by sync-blog.js and will be overwritten.
 * To customize, edit the template.
 */

import { getCollection } from 'astro:content';
import SharedBlogLayout from '../../layouts/SharedBlogLayout.astro';
import TableOfContents from '../../components/TableOfContents.astro';
import SidebarAbove from '../../components/SidebarAbove.astro';
import SidebarBelow from '../../components/SidebarBelow.astro';
import AffiliateAds from '../../components/AffiliateAds.astro';
import { siteConfig } from '../../site-config.ts';
import { BlogService } from '../../lib/blog-service.ts';
import { RelatedArticlesService } from '../../lib/related-articles.ts';
import { ContentProcessor } from '../../lib/content-processor.ts';
import { estimateReadingTime, getValidatedImageUrl } from '../../lib/utils.ts';
import JsonLdBlogPost from '../../components/JsonLdBlogPost.astro';
import { marked } from 'marked';
import '../../styles/markdown-blog.css';
import { ensureTrailingSlash } from '../../lib/utils.ts';

// Generate static paths from the markdown files in content/blog/
export async function getStaticPaths() {
    const blogEntries = await getCollection('blog');

    return blogEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

// Get the markdown entry from props
const { entry } = Astro.props;

// Process HowTo tags first, then RELATED-ARTICLE tags
const rawContent = entry.body || '';
const { processedContent: contentNoHowTo, howToJson } = ContentProcessor.processHowToTags(rawContent);
const processedContent = await ContentProcessor.processContent(contentNoHowTo);


console.log(`ðŸ›‘ðŸ›‘ðŸ›‘ðŸ›‘ howToJson: ${JSON.stringify(howToJson)}`);

// Render the original content for headings (TOC)
const { headings } = await entry.render();

// Convert processed markdown to HTML
const processedHtml = await marked(processedContent, {
    gfm: true,
    breaks: true,
});
const articleFromDb = await BlogService.getArticleBySlugFromDb(entry.slug);
const blogConfigFromDb = await BlogService.getBlogConfigFromDb();
const canonical = siteConfig.site.canonical ? new URL(ensureTrailingSlash(siteConfig.site.canonical) + 'blog/' + entry.slug).toString() : undefined;

// Get author information
const authorName = articleFromDb?.author_name || blogConfigFromDb?.author_name;
const authorImage = articleFromDb?.author_image || blogConfigFromDb?.author_image;
const authorDescription = blogConfigFromDb?.author_description;

// Get FAQ information
const faqJson = articleFromDb?.faq_json;
let faqData = null;

if (faqJson) {
    try {
        faqData = typeof faqJson === 'string' ? JSON.parse(faqJson) : faqJson;
    } catch (e) {
        console.error('Error parsing FAQ JSON:', e);
    }
}


// Get related articles
let relatedArticles = [];
if (articleFromDb?.id) {
    try {
        relatedArticles = await RelatedArticlesService.getRelatedArticlesSimple(articleFromDb.id);
        console.log(`ðŸ“š Found ${relatedArticles.length} related articles`);
    } catch (e) {
        console.error('Error fetching related articles:', e);
    }
}

const authorImageUrl = authorImage ? '/assets/images/blog/' + authorImage.replace(/^.*\//, '') : null;
---

<SharedBlogLayout
    canonicalConf={canonical}
    faviconPathFromConf={siteConfig.site.faviconPath}
    seoFromConf={siteConfig.blogPostConfig.seo}

    titleFromDb={articleFromDb?.title}
    descriptionFromDb={articleFromDb?.seo_description}
    authorNameFromDb={articleFromDb?.author_name}
    imageFromDb={articleFromDb?.image}
    imageUrlFromDb={articleFromDb?.seo_image_url}
    imageCaptionFromDb={articleFromDb?.seo_image_caption}
    imageWidthFromDb={articleFromDb?.seo_image_width}
    imageHeightFromDb={articleFromDb?.seo_image_height}

    pubDate={articleFromDb?.published ? new Date(articleFromDb.published).toISOString() : undefined}
    updatedDate={articleFromDb?.modified ? new Date(articleFromDb.modified).toISOString() : undefined}
>
    <!-- Additional head content specific to this layout -->
    <Fragment slot="head">
        <JsonLdBlogPost
            articleConfigFromDb={articleFromDb}
            blogConfigFromDb={blogConfigFromDb}
            pubDate={entry.data.pubDate}
            updatedDate={entry.data.updatedDate}
            wordCount={entry.data.wordCount}
        />
    </Fragment>

    <div class="blog-layout-container">
        <!-- Main Article Content -->
        <article class="blog-article">
            <header class="article-header">
                <h1 class="article-title">{entry.data.title}</h1>

                <div class="article-meta">
                    <time datetime={entry.data.pubDate}>
                        {
                            new Date(entry.data.pubDate).toLocaleDateString('pt-BR', {
                                year: 'numeric',
                                month: 'long',
                                day: 'numeric',
                            })
                        }
                    </time>
                    {entry.data.topic && <span class="article-topic">{entry.data.topic}</span>}
                </div>

                {
                    entry.data.image && entry.data.image !== '/assets/images/blog/' && (
                        <div class="article-image-wrapper">
                            <img
                                src={entry.data.image}
                                alt={entry.data.title}
                                class="article-image"
                            />
                        </div>
                    )
                }
                <span class="article-reading-time">
                    Leitura: â‰ˆ{estimateReadingTime(Number(entry.data.wordCount))} min
                </span>
            </header>

            <!-- Professional styled markdown content -->
            <div class="blog-content" set:html={processedHtml}>
            </div>

            <!-- FAQ Section -->
            {faqData && Array.isArray(faqData) && faqData.length > 0 && (
                <div class="faq-section">
                    <div class="faq-divider"></div>
                    <div class="faq-card">
                        <h2 class="faq-title">Perguntas Frequentes</h2>
                        <div class="faq-list">
                            {faqData.map((item, index) => (
                                <div class="faq-item" key={index}>
                                    <button 
                                        class="faq-question" 
                                        onclick={`toggleFaq(${index})`}
                                        aria-expanded="false"
                                        aria-controls={`faq-answer-${index}`}
                                    >
                                        <span class="faq-question-text">{item.question}</span>
                                        <svg class="faq-chevron" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
                                        </svg>
                                    </button>
                                    <div 
                                        class="faq-answer" 
                                        id={`faq-answer-${index}`}
                                        style="display: none;"
                                    >
                                        <p>{item.answer}</p>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>
            )}

            <!-- Author Section -->
            {authorName && (
                <div class="author-section">
                    <div class="author-divider"></div>
                    <div class="author-card">
                        {authorImageUrl && (
                            <div class="author-image">
                                <img src={authorImageUrl} alt={authorName} />
                            </div>
                        )}
                        <div class="author-content">
                            <div class="author-info">
                                <span class="author-label">Escrito por</span>
                                <h3 class="author-name">{authorName}</h3>
                            </div>
                            {authorDescription && (
                                <p class="author-description">{authorDescription}</p>
                            )}
                        </div>
                    </div>
                </div>
            )}

            <!-- Disclaimer Section -->
            <div class="disclaimer-section">
                <div class="disclaimer-card">
                    <div class="disclaimer-content">
                        <p>
                            <strong>Nota:</strong> As informaÃ§Ãµes deste artigo sÃ£o para fins educativos. 
                            Sempre verifique dados atualizados em fontes oficiais antes de tomar decisÃµes importantes.
                        </p>
                    </div>
                </div>
            </div>

            <!-- Related Articles Section -->
            {relatedArticles && relatedArticles.length > 0 && (
                <div class="related-articles-section">
                    <div class="related-articles-divider">
                        <div class="divider-line"></div>
                        <div class="divider-icon">
                            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
                            </svg>
                        </div>
                        <div class="divider-line"></div>
                    </div>
                    
                    <div class="related-articles-container">
                        <h2 class="related-articles-title">
                            <span class="title-gradient">Artigos Relacionados</span>
                        </h2>
                        <p class="related-articles-subtitle">Continue sua leitura com estes tÃ³picos conectados</p>
                        
                        <div class={`related-articles-grid ${
                            relatedArticles.length === 1 ? 'single-card' : 
                            relatedArticles.length === 2 ? 'two-cards' : ''
                        }`}>
                            {relatedArticles.slice(0, 4).map((article) => {
                                const imageUrl = article.seo_image_url || (article.image ? `/assets/images/blog/${article.image.replace(/^.*\//, '')}` : null);
                                const fallbackImage = '/assets/images/blog/logo-bg-white-blog.png';
                                
                                return (
                                    <a href={`/blog/${article.slug}`} class="related-article-card">
                                        <div class="related-article-image">
                                            {imageUrl ? (
                                                <img 
                                                    src={imageUrl} 
                                                    alt={article.title}
                                                    loading="lazy"
                                                />
                                            ) : (
                                                <div class="related-article-placeholder">
                                                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                                        <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
                                                        <circle cx="8.5" cy="8.5" r="1.5"/>
                                                        <polyline points="21,15 16,10 5,21"/>
                                                    </svg>
                                                </div>
                                            )}
                                            <div class="related-article-overlay">
                                                <div class="overlay-gradient"></div>
                                                <div class="read-more-badge">
                                                    <span>Ler artigo</span>
                                                    <svg viewBox="0 0 20 20" fill="currentColor">
                                                        <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
                                                    </svg>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="related-article-content">
                                            <h3 class="related-article-title">{article.title}</h3>
                                            {article.blog_topic && (
                                                <span class="related-article-topic">{article.blog_topic.title}</span>
                                            )}
                                        </div>
                                    </a>
                                );
                            })}
                        </div>
                        
                        {relatedArticles.length > 4 && (
                            <div class="related-articles-more">
                                <p class="more-articles-text">
                                    E mais <strong>{relatedArticles.length - 4}</strong> artigos relacionados em nosso blog
                                </p>
                                <a href="/blog" class="explore-blog-btn">
                                    <span>Explorar Blog</span>
                                    <svg viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"/>
                                    </svg>
                                </a>
                            </div>
                        )}
                    </div>
                </div>
            )}
        </article>

        <!-- Table of Contents Sidebar -->
        <aside class="sidebar-container">
            <!-- CustomizaÃ§Ã£o Acima do TOC -->
            <SidebarAbove />

            <!-- Table of Contents -->
            <div class="toc-responsive">
                <TableOfContents headings={headings} />
            </div>

            <!-- CustomizaÃ§Ã£o Abaixo do TOC -->
            {AffiliateAds && <AffiliateAds />}
        </aside>
    </div>
</SharedBlogLayout>

<style>
    .blog-layout-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 2rem;
        display: grid;
        grid-template-columns: 1fr 300px;
        gap: 3rem;
        align-items: start;
    }

    .blog-article {
        min-width: 0; /* Prevents grid overflow */
    }

    .sidebar-container {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .article-image-wrapper {
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 0.5rem 0 1.5rem;
        padding: 0 3rem;
    }

    /* FAQ Section Styles */
    .faq-section {
        margin-top: 4rem;
        margin-bottom: 2rem;
        padding-left: 2rem;
        padding-right: 2rem;
    }

    .faq-divider {
        height: 1px;
        background: linear-gradient(to right, transparent, #e5e7eb, transparent);
        margin-bottom: 2rem;
    }

    .faq-card {
        background: #f8fafc;
        border-radius: 12px;
        border: 1px solid #e2e8f0;
        padding: 2rem;
    }

    .faq-title {
        font-size: 1.875rem;
        font-weight: 700;
        color: #1e293b;
        margin: 0 0 1.5rem 0;
        text-align: center;
    }

    .faq-list {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .faq-item {
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        background: white;
        overflow: hidden;
        transition: all 0.2s ease;
    }

    .faq-item:hover {
        border-color: #cbd5e1;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .faq-question {
        width: 100%;
        padding: 1rem 1.25rem;
        text-align: left;
        background: none;
        border: none;
        cursor: pointer;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 1rem;
        font-weight: 600;
        color: #374151;
        transition: background-color 0.2s ease;
    }

    .faq-question:hover {
        background-color: #f9fafb;
    }

    .faq-question-text {
        flex: 1;
        margin-right: 1rem;
    }

    .faq-chevron {
        width: 20px;
        height: 20px;
        color: #6b7280;
        transition: transform 0.2s ease;
        flex-shrink: 0;
    }

    .faq-question[aria-expanded="true"] .faq-chevron {
        transform: rotate(180deg);
    }

    .faq-answer {
        padding: 0 1.25rem 1rem 1.25rem;
        border-top: 1px solid #f3f4f6;
    }

    .faq-answer p {
        margin: 0.75rem 0 0 0;
        color: #4b5563;
        line-height: 1.6;
    }

    /* Author Section Styles */
    .author-section {
        margin-top: 4rem;
        margin-bottom: 2rem;
        padding-left: 2rem;
        padding-right: 2rem;
    }

    .author-divider {
        height: 1px;
        background: linear-gradient(to right, transparent, #e5e7eb, transparent);
        margin-bottom: 2rem;
    }

    .author-card {
        display: flex;
        gap: 1.5rem;
        align-items: flex-start;
        padding: 2rem;
        background: #f8fafc;
        border-radius: 12px;
        border: 1px solid #e2e8f0;
    }

    .author-image {
        flex-shrink: 0;
    }

    .author-image img {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        object-fit: cover;
        border: 3px solid #fff;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .author-content {
        flex: 1;
        min-width: 0;
    }

    .author-info {
        margin-bottom: 0.75rem;
    }

    .author-label {
        display: block;
        font-size: 0.875rem;
        color: #64748b;
        font-weight: 500;
        margin-bottom: 0.25rem;
        text-transform: uppercase;
        letter-spacing: 0.025em;
    }

    .author-name {
        font-size: 1.5rem;
        font-weight: 700;
        color: #1e293b;
        margin: 0;
        line-height: 1.2;
    }

    .author-description {
        color: #475569;
        line-height: 1.6;
        margin: 0;
        font-size: 1rem;
    }

    /* Disclaimer Section Styles */
    .disclaimer-section {
        margin-top: 2.5rem;
        margin-bottom: 2rem;
        padding-left: 2rem;
        padding-right: 2rem;
    }

    .disclaimer-card {
        background: #f8f9fa;
        border-radius: 8px;
        border-left: 3px solid #6b7280;
        padding: 1rem 1.5rem;
    }

    .disclaimer-content {
        color: #6b7280;
        line-height: 1.5;
    }

    .disclaimer-content p {
        margin: 0;
        font-size: 0.875rem;
        font-style: italic;
    }

    .disclaimer-content strong {
        font-weight: 600;
        color: #4b5563;
        font-style: normal;
    }

    /* Related Articles Section Styles */
    .related-articles-section {
        margin-top: 4rem;
        margin-bottom: 2rem;
        padding-left: 2rem;
        padding-right: 2rem;
    }

    .related-articles-divider {
        display: flex;
        align-items: center;
        margin-bottom: 2.5rem;
        gap: 1rem;
    }

    .divider-line {
        flex: 1;
        height: 1px;
        background: linear-gradient(to right, transparent, #e5e7eb, transparent);
    }

    .divider-icon {
        background: linear-gradient(135deg, #f59e0b, #d97706);
        border-radius: 50%;
        padding: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .divider-icon svg {
        width: 20px;
        height: 20px;
        color: white;
    }

    .related-articles-container {
        text-align: center;
    }

    .related-articles-title {
        font-size: 2.25rem;
        font-weight: 800;
        margin: 0 0 0.5rem 0;
        line-height: 1.2;
    }

    .title-gradient {
        background: linear-gradient(135deg, #1e40af, #3b82f6, #06b6d4);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        color: transparent;
    }

    .related-articles-subtitle {
        color: #6b7280;
        font-size: 1.125rem;
        margin: 0 0 2.5rem 0;
        font-weight: 400;
    }

    .related-articles-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        max-width: 800px; /* Limit to accommodate 2 cards max */
        gap: 1.5rem;
        margin: 0 auto 2rem auto;
        justify-items: center; /* Center items when they don't fill the row */
    }

    /* Single card optimization - limit width when only one card */
    .related-articles-grid.single-card {
        max-width: 380px;
        margin: 0 auto 2rem auto;
        grid-template-columns: 1fr;
    }

    /* Two cards optimization - ensure perfect fit for 2 cards */
    .related-articles-grid.two-cards {
        max-width: 800px;
        margin: 0 auto 2rem auto;
        grid-template-columns: 1fr 1fr;
    }

    /* Individual card max-width to prevent excessive stretching */
    .related-article-card {
        max-width: 380px;
        width: 100%;
    }

    .related-article-card {
        display: block;
        text-decoration: none;
        background: white;
        border-radius: 16px;
        overflow: hidden;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        border: 1px solid #f1f5f9;
        position: relative;
        group: related-card;
        max-width: 380px;
        width: 100%;
    }

    .related-article-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        border-color: #e2e8f0;
    }

    .related-article-image {
        position: relative;
        width: 100%;
        height: 200px;
        overflow: hidden;
        background: linear-gradient(135deg, #f1f5f9, #e2e8f0);
    }

    .related-article-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .related-article-card:hover .related-article-image img {
        transform: scale(1.05);
    }

    .related-article-placeholder {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, #f8fafc, #e2e8f0);
        color: #94a3b8;
    }

    .related-article-placeholder svg {
        width: 48px;
        height: 48px;
    }

    .related-article-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        opacity: 0;
        transition: opacity 0.3s ease;
        pointer-events: none;
    }

    .related-article-card:hover .related-article-overlay {
        opacity: 1;
    }

    .overlay-gradient {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 0.6));
    }

    .read-more-badge {
        position: absolute;
        bottom: 12px;
        right: 12px;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(8px);
        border-radius: 20px;
        padding: 6px 12px;
        display: flex;
        align-items: center;
        gap: 4px;
        font-size: 0.875rem;
        font-weight: 600;
        color: #1e293b;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    .read-more-badge svg {
        width: 16px;
        height: 16px;
    }

    .related-article-content {
        padding: 1.25rem;
        text-align: left;
    }

    .related-article-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #1e293b;
        margin: 0 0 0.5rem 0;
        line-height: 1.4;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        transition: color 0.2s ease;
    }

    .related-article-card:hover .related-article-title {
        color: #3b82f6;
    }

    .related-article-topic {
        display: inline-block;
        background: linear-gradient(135deg, #fef3c7, #fde68a);
        color: #92400e;
        font-size: 0.75rem;
        font-weight: 600;
        padding: 0.25rem 0.75rem;
        border-radius: 12px;
        text-transform: uppercase;
        letter-spacing: 0.025em;
    }

    .related-articles-more {
        margin-top: 2rem;
        padding: 1.5rem;
        background: linear-gradient(135deg, #f8fafc, #f1f5f9);
        border-radius: 16px;
        border: 1px dashed #cbd5e1;
    }

    .more-articles-text {
        color: #64748b;
        margin: 0 0 1rem 0;
        font-size: 1rem;
    }

    .more-articles-text strong {
        color: #3b82f6;
        font-weight: 700;
    }

    .explore-blog-btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        background: linear-gradient(135deg, #3b82f6, #1d4ed8);
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 12px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.2s ease;
        box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    }

    .explore-blog-btn:hover {
        background: linear-gradient(135deg, #1d4ed8, #1e3a8a);
        transform: translateY(-1px);
        box-shadow: 0 8px 20px rgba(59, 130, 246, 0.4);
    }

    .explore-blog-btn svg {
        width: 18px;
        height: 18px;
    }

    /* Responsive Design */
    @media (max-width: 1024px) {
        .blog-layout-container {
            grid-template-columns: 1fr;
            gap: 2rem;
            padding: 1.5rem;
        }
        .toc-responsive {
            display: none;
        }
        
        /* Related articles tablet styles */
        .related-articles-section {
            padding-left: 1.5rem;
            padding-right: 1.5rem;
        }
        
        .related-articles-grid {
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            max-width: 700px; /* Slightly smaller on tablets */
        }
    }

    @media (max-width: 768px) {
        .blog-layout-container {
            padding: 1rem;
            gap: 1.5rem;
        }
        .article-image-wrapper {
            margin: 2rem 0;
            padding: 0 1rem;
        }
        .toc-responsive {
            display: none;
        }
        
        /* FAQ section mobile styles */
        .faq-section {
            padding-left: 1rem;
            padding-right: 1rem;
        }
        
        .faq-card {
            padding: 1.5rem;
        }
        
        .faq-title {
            font-size: 1.5rem;
            margin-bottom: 1rem;
        }
        
        .faq-question {
            padding: 0.875rem 1rem;
            font-size: 0.9rem;
        }
        
        .faq-answer {
            padding: 0 1rem 0.875rem 1rem;
        }

        /* Author section mobile styles */
        .author-section {
            padding-left: 1rem;
            padding-right: 1rem;
        }
        
        .author-card {
            flex-direction: column;
            text-align: center;
            gap: 1rem;
            padding: 1.5rem;
        }
        
        .author-image img {
            width: 60px;
            height: 60px;
        }
        
        .author-name {
            font-size: 1.25rem;
        }
        
        .author-description {
            font-size: 0.875rem;
        }

        /* Disclaimer section mobile styles */
        .disclaimer-section {
            padding-left: 1rem;
            padding-right: 1rem;
            margin-top: 2rem;
        }
        
        .disclaimer-card {
            padding: 0.875rem 1.25rem;
        }
        
        .disclaimer-content p {
            font-size: 0.8125rem;
        }

        /* Related articles mobile styles */
        .related-articles-section {
            padding-left: 1rem;
            padding-right: 1rem;
            margin-top: 3rem;
        }
        
        .related-articles-title {
            font-size: 1.75rem;
        }
        
        .related-articles-subtitle {
            font-size: 1rem;
            margin-bottom: 2rem;
        }
        
        .related-articles-grid {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        /* Mobile: Always single column with optimized max-width */
        .related-articles-grid.single-card,
        .related-articles-grid.two-cards {
            max-width: 100%;
            margin: 0 0 2rem 0;
        }
        
        .related-article-card {
            max-width: 100%;
        }
        
        .related-article-image {
            height: 160px;
        }
        
        .related-article-content {
            padding: 1rem;
        }
        
        .related-article-title {
            font-size: 1rem;
        }
        
        .related-articles-more {
            margin-top: 1.5rem;
            padding: 1.25rem;
        }
        
        .explore-blog-btn {
            padding: 0.625rem 1.25rem;
            font-size: 0.875rem;
        }
    }
</style>

<script>
    function toggleFaq(index: number) {
        const button = document.querySelector(`button[onclick="toggleFaq(${index})"]`);
        const answer = document.getElementById(`faq-answer-${index}`);
        
        if (!button || !answer) return;
        
        const isExpanded = button.getAttribute('aria-expanded') === 'true';
        
        // Close all other FAQ items
        document.querySelectorAll('.faq-question').forEach((btn, idx) => {
            if (idx !== index) {
                btn.setAttribute('aria-expanded', 'false');
                const otherAnswer = document.getElementById(`faq-answer-${idx}`);
                if (otherAnswer) {
                    otherAnswer.style.display = 'none';
                }
            }
        });
        
        // Toggle current item
        if (isExpanded) {
            button.setAttribute('aria-expanded', 'false');
            answer.style.display = 'none';
        } else {
            button.setAttribute('aria-expanded', 'true');
            answer.style.display = 'block';
        }
    }
    
    // Make function globally available
    (window as any).toggleFaq = toggleFaq;

    // Handle image fallbacks for related articles
    function handleImageError(img: HTMLImageElement) {
        img.src = '/assets/images/blog/logo-bg-white-blog.png';
        img.onerror = null; // Prevent infinite loop
    }

    // Set up image error handling after DOM loads
    document.addEventListener('DOMContentLoaded', () => {
        const relatedImages = document.querySelectorAll('.related-article-image img');
        relatedImages.forEach((img) => {
            (img as HTMLImageElement).onerror = function() {
                handleImageError(this as HTMLImageElement);
            };
        });
    });
</script>
