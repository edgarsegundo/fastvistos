---
import { getCollection } from 'astro:content';
import SharedBlogLayout from '../../layouts/SharedBlogLayout.astro';
import { siteConfig } from '../../site-config.ts';
import '../../styles/markdown-blog.css';

// Generate static paths from the markdown files in content/blog/
export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry }
  }));
}

// Get the markdown entry from props
const { entry } = Astro.props;

// Render the markdown content
const { Content } = await entry.render();

const title = `${entry.data.title} - ${siteConfig.name} Blog`;
const description = entry.data.description || entry.data.title;
---

<SharedBlogLayout 
    title={title}
    description={description}
>
    <article class="blog-article max-w-4xl mx-auto px-4 py-8">
        <header class="article-header">
            <h1 class="article-title">{entry.data.title}</h1>
            
            <div class="article-meta">
                <time datetime={entry.data.pubDate}>
                    {new Date(entry.data.pubDate).toLocaleDateString('pt-BR', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                    })}
                </time>
                
                {entry.data.topic && (
                    <span class="article-topic">
                        {entry.data.topic}
                    </span>
                )}
            </div>

            {entry.data.image && entry.data.image !== "/assets/images/blog/" && (
                <img 
                    src={entry.data.image}
                    alt={entry.data.title}
                    class="article-image"
                />
            )}
        </header>

        <!-- Professional styled markdown content -->
        <div class="blog-content">
            <Content />
        </div>
    </article>
</SharedBlogLayout>
</SharedBlogLayout>