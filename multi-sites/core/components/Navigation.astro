---
// Core Navigation component with multi-site support
import { getCurrentSite } from '../lib/site-manager.js';

interface Props {
  transparent?: boolean;
  fixed?: boolean;
  className?: string;
}

const { transparent = false, fixed = true, className = '' } = Astro.props;
const site = getCurrentSite();

// Site-specific navigation links
const getNavigationLinks = (siteId: string) => {
  switch (siteId) {
    case 'fastvistos':
      return [
        { href: '#casos-de-sucesso', label: 'Casos de Sucesso' },
        { href: '#servicos', label: 'Serviços' },
        { href: '#sobre', label: 'Sobre' },
        { href: '/blog', label: 'Blog' },
        { href: '#contato', label: 'Contato' }
      ];
    case 'conceptvistos':
      return [
        { href: '#servicos-premium', label: 'Serviços Premium' },
        { href: '#consultoria', label: 'Consultoria' },
        { href: '#sobre', label: 'Sobre' },
        { href: '/blog', label: 'Blog' },
        { href: '#contato', label: 'Contato' }
      ];
    case 'vibecode':
      return [
        { href: '#projetos', label: 'Projetos' },
        { href: '#servicos', label: 'Serviços' },
        { href: '#tecnologias', label: 'Tecnologias' },
        { href: '/blog', label: 'Blog' },
        { href: '#contato', label: 'Contato' }
      ];
    default:
      return [
        { href: '#sobre', label: 'Sobre' },
        { href: '#servicos', label: 'Serviços' },
        { href: '/blog', label: 'Blog' },
        { href: '#contato', label: 'Contato' }
      ];
  }
};

const navigationLinks = getNavigationLinks(site.id);
---

<nav 
  id="header" 
  class={`w-full z-50 ${fixed ? 'fixed' : 'relative'} top-0 text-white ${transparent ? 'bg-transparent' : 'gradient'} ${className}`}
  style={`background: linear-gradient(135deg, ${site.primaryColor} 0%, ${site.secondaryColor} 100%);`}
>
  <div class="w-full container mx-auto flex flex-wrap items-center justify-between mt-0 py-4">
    <div class="pl-4 flex items-center">
      <a
        class="toggleColour text-white no-underline hover:no-underline font-bold text-2xl lg:text-4xl"
        href={`https://${site.domain}`}
      >
        <img
          src={site.logo}
          alt={`${site.name} Logo`}
          class="w-32 sm:w-36 md:w-40 lg:w-48 xl:w-56 h-auto"
        />
      </a>
    </div>
    
    <!-- Mobile menu button -->
    <div class="block lg:hidden pr-4">
      <button
        id="nav-toggle"
        aria-label="Abrir menu"
        class="flex items-center p-1 text-white hover:text-gray-200 focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out"
      >
        <svg
          class="fill-current h-6 w-6"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <title>Menu</title>
          <path d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z"></path>
        </svg>
      </button>
    </div>
    
    <!-- Navigation menu -->
    <div
      id="nav-content"
      class="w-full flex-grow lg:flex lg:items-center lg:w-auto hidden mt-2 lg:mt-0 lg:bg-transparent p-4 lg:p-0 z-20"
    >
      <ul class="list-reset lg:flex justify-end flex-1 items-center">
        {navigationLinks.map((link) => (
          <li class="mr-3">
            <a
              class="inline-block top-link text-white lg:text-gray-100 py-2 px-4 font-bold no-underline hover:text-gray-200 transition-colors duration-200 link-click"
              href={link.href}
            >
              {link.label}
            </a>
          </li>
        ))}
        
        <!-- CTA Button -->
        <li class="mr-3">
          <a
            href={site.features.booking ? '#agendar' : `https://wa.me/${site.whatsapp.replace(/\D/g, '')}`}
            class="inline-block px-6 py-3 bg-white text-gray-800 font-bold rounded-lg hover:bg-gray-100 transition-colors duration-200 transform hover:scale-105"
            style={`background-color: white; color: ${site.primaryColor};`}
          >
            {site.features.booking ? 'Agendar Consulta' : 'Falar no WhatsApp'}
          </a>
        </li>
      </ul>
    </div>
  </div>
</nav>

<style>
  .gradient {
    background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
  }
  
  .link-click:hover {
    transform: translateY(-1px);
    transition: all 0.2s ease-in-out;
  }
  
  @media (max-width: 1024px) {
    #nav-content {
      background: rgba(0, 0, 0, 0.9);
      border-radius: 0.5rem;
      margin: 0.5rem;
    }
  }
</style>

<script>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', function() {
    const navToggle = document.getElementById('nav-toggle');
    const navContent = document.getElementById('nav-content');
    
    if (navToggle && navContent) {
      navToggle.addEventListener('click', function() {
        navContent.classList.toggle('hidden');
      });
    }
    
    // Close mobile menu when clicking a link
    const navLinks = document.querySelectorAll('.link-click');
    navLinks.forEach(link => {
      link.addEventListener('click', function() {
        if (navContent && !navContent.classList.contains('hidden')) {
          navContent.classList.add('hidden');
        }
      });
    });
    
    // Smooth scrolling for anchor links
    const anchorLinks = document.querySelectorAll('a[href^="#"]');
    anchorLinks.forEach(link => {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        const targetId = this.getAttribute('href').substring(1);
        const targetElement = document.getElementById(targetId);
        
        if (targetElement) {
          targetElement.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });
  });
</script>
