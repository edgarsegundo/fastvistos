---
import JsonLdReviews from './JsonLdReviews.astro';

const {
  site,
  faqList = [],
  servicesList = [],
  reviewsList = [],
  breadcrumbList = [],
  disableFAQ = false,
  disableServices = false,
  disableReviews = false,
  disableBreadcrumb = false,
  disableWebSite = false,
  disableOrganization = false,
  disableImageObject = false,
  disableWebPage = false,
  disableWebSiteSearchAction = true,
  ...rest
} = Astro.props;

const homepageUrl = site?.domain ? `https://${site?.domain}` : '';
const siteName = site?.name;
const description = site?.description;
const org = site?.organization ?? {
  name: siteName,
  url: homepageUrl,
  logo: site?.logo
};
const websiteId = `${homepageUrl}#website`;
const orgId = `${homepageUrl}#organization`;
const imageId = `${homepageUrl}#primaryimage`;
const breadcrumbId = `${homepageUrl}#breadcrumb`;
const logoId = `${homepageUrl}#/schema/logo/image/`;

// WebPage block
const webPageBlock = !disableWebPage && {
  '@type': 'WebPage',
  '@id': homepageUrl,
  'url': homepageUrl,
  'name': siteName,
  'isPartOf': { '@id': websiteId },
  'about': { '@id': orgId },
  'primaryImageOfPage': { '@id': imageId },
  'image': { '@id': imageId },
  ...(site?.thumbnailUrl
    ? { 'thumbnailUrl': site.thumbnailUrl }
    : site?.image
    ? { 'thumbnailUrl': site.image }
    : {}),
  ...(site.datePublished ? { 'datePublished': site.datePublished } : {}),
  ...(site.dateModified ? { 'dateModified': site.dateModified } : {}),
  ...(description ? { 'description': description } : {}),
  'breadcrumb': { '@id': breadcrumbId },
  'inLanguage': site.language || 'pt-BR',
  'potentialAction': [
    {
      '@type': 'ReadAction',
      'target': [homepageUrl]
    }
  ]
};

// ImageObject (primary image)
const imageObjectBlock = !disableImageObject && site?.image && {
  '@type': 'ImageObject',
  'inLanguage': site.language,
  '@id': imageId,
  'url': site.image,
  'contentUrl': site.image
};

// BreadcrumbList
const breadcrumbBlock = !disableBreadcrumb && {
  '@type': 'BreadcrumbList',
  '@id': breadcrumbId,
  'itemListElement': breadcrumbList.length > 0
    ? breadcrumbList
    : [
        {
          '@type': 'ListItem',
          'position': 1,
          'name': 'Home'
        }
      ]
};

// WebSite
const webSiteBlock = !disableWebSite && {
  '@type': 'WebSite',
  '@id': websiteId,
  'url': homepageUrl,
  'name': siteName,
  'description': description ?? '',
  'publisher': { '@id': orgId },
  ...(!disableWebSiteSearchAction
    ? {
        'potentialAction': [
          {
            '@type': 'SearchAction',
            'target': {
              '@type': 'EntryPoint',
              'urlTemplate': `${homepageUrl}?s={search_term_string}`
            },
            'query-input': {
              '@type': 'PropertyValueSpecification',
              'valueRequired': true,
              'valueName': 'search_term_string'
            }
          }
        ]
      }
    : {}),
  'inLanguage': site.language
};

// Organization (with logo as ImageObject)
const orgBlock = !disableOrganization && {
  '@type': 'Organization',
  '@id': orgId,
  'name': org.name,
  'url': org.url,
  'logo': {
    '@type': 'ImageObject',
    'inLanguage': site.language,
    '@id': logoId,
    'url': org.logo,
    'contentUrl': org.logo,
    ...(org.logoWidth ? { 'width': org.logoWidth } : {}),
    ...(org.logoHeight ? { 'height': org.logoHeight } : {}),
    ...(org.name ? { 'caption': org.name } : {})
  },
  'image': { '@id': logoId }
};

// FAQ block
const faqBlock = !disableFAQ && Array.isArray(faqList) && faqList.length > 0 ? {
  '@type': 'FAQPage',
  'mainEntity': faqList.map((faq) => ({
    '@type': 'Question',
    'name': faq.question,
    'acceptedAnswer': {
      '@type': 'Answer',
      'text': faq.answer
    }
  }))
} : null;

// Services block
const servicesBlock = !disableServices && Array.isArray(servicesList) && servicesList.length > 0
  ? servicesList.map((service) =>
      service.schema
        ? service.schema
        : {
            '@type': 'Service',
            'name': service.name,
            'description': service.description,
            ...(service.offers ? { offers: service.offers } : {}),
            provider: { '@id': orgId }
          }
    )
  : null;

// VideoObjects independentes para reviews em vídeo
const videoObjects = !disableReviews && Array.isArray(reviewsList) && reviewsList.length > 0
  ? reviewsList
      .filter((review) => review.videoId && review.thumbnail && review.url)
      .map((review, idx) => {
        // Ensure uploadDate is in ISO 8601 with timezone (e.g., 2023-05-02T00:00:00-03:00)
        let uploadDate = review.uploadDate;
        if (uploadDate && !uploadDate.includes('T')) {
          uploadDate = `${uploadDate}T00:00:00-03:00`;
        }
        return {
          '@type': 'VideoObject',
          '@id': `${homepageUrl}#review-video-${idx+1}`,
          name: review.title || '',
          description: review.reviewBody || review.title || '',
          thumbnailUrl: review.thumbnail,
          contentUrl: review.url,
          embedUrl: `https://www.youtube.com/embed/${review.videoId}`,
          ...(uploadDate ? { uploadDate } : {}),
          publisher: {
            '@type': 'Organization',
            name: siteName,
            logo: {
              '@type': 'ImageObject',
              url: site?.logo
            }
          },
          mainEntityOfPage: {
            '@type': 'WebPage',
            '@id': homepageUrl
          }
        };
      })
  : [];
const reviewsBlock = !disableReviews && Array.isArray(reviewsList) && reviewsList.length > 0
  ? reviewsList.map((review, idx) => {
      const reviewBody = review.reviewBody || review.title || 'Ótimo serviço!';
      const base = {
        '@type': 'Review',
        reviewBody,
        author: {
          '@type': 'Person',
          name: review.author || `Cliente ${siteName}`,
        },
        reviewRating: {
          '@type': 'Rating',
          ratingValue: review.ratingValue || 5,
          bestRating: 5,
          worstRating: 1,
        },
        mainEntityOfPage: {
          '@type': 'WebPage',
          '@id': homepageUrl
        }
      };
      if (review.videoId && review.thumbnail && review.url) {
        return {
          ...base,
          associatedMedia: {
            '@id': `${homepageUrl}#review-video-${idx+1}`
          }
        };
      }
      return base;
    })
  : [];


// AggregateRating calculation
let aggregateRating = null;
if (reviewsBlock.length > 0) {
  const ratings = reviewsBlock.map(r => (r.reviewRating && r.reviewRating.ratingValue) ? Number(r.reviewRating.ratingValue) : 5);
  const reviewCount = ratings.length;
  const ratingValue = reviewCount > 0 ? (ratings.reduce((a, b) => a + b, 0) / reviewCount) : 5;
  aggregateRating = {
    '@type': 'AggregateRating',
    ratingValue: Number(ratingValue.toFixed(1)),
    reviewCount
  };
}

// LocalBusiness principal com reviews agrupados, aggregateRating, address obrigatório e mainEntityOfPage
const localBusinessBlock = !disableOrganization && {
  '@type': 'LocalBusiness',
  '@id': orgId,
  name: siteName,
  url: homepageUrl,
  logo: {
    '@type': 'ImageObject',
    'inLanguage': site.language,
    '@id': logoId,
    'url': site?.logo,
    'contentUrl': site?.logo,
    ...(org.logoWidth ? { 'width': org.logoWidth } : {}),
    ...(org.logoHeight ? { 'height': org.logoHeight } : {}),
    ...(org.name ? { 'caption': org.name } : {})
  },
  image: { '@id': logoId },
  address: site?.address || {
    '@type': 'PostalAddress',
    streetAddress: 'Rua Exemplo, 123',
    addressLocality: 'São Paulo',
    addressRegion: 'SP',
    postalCode: '01234-567',
    addressCountry: 'BR'
  },
  telephone: site?.contactPoint?.telephone || '+55 11 99999-9999',
  contactPoint: site?.contactPoint || {
    '@type': 'ContactPoint',
    telephone: site?.contactPoint?.telephone || '+55 11 99999-9999',
    contactType: 'customer service',
    areaServed: 'BR',
    availableLanguage: ['Portuguese', 'English']
  },
  ...(reviewsBlock.length > 0 ? { review: reviewsBlock } : {}),
  ...(aggregateRating && reviewsBlock.length > 1 ? { aggregateRating } : {}),
  priceRange: site?.priceRange || '$$',
  mainEntityOfPage: {
    '@type': 'WebPage',
    '@id': homepageUrl
  }
};

const blocks = [
  webPageBlock,
  imageObjectBlock,
  breadcrumbBlock,
  webSiteBlock,
  orgBlock,
  localBusinessBlock,
  faqBlock,
  servicesBlock,
  ...videoObjects
].filter(Boolean).flat();

const jsonLdGraph = {
  '@context': 'https://schema.org',
  '@graph': blocks
};
---

<script type="application/ld+json" set:html={JSON.stringify(jsonLdGraph, null, 2)}></script>

<script>
document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('div[updatable_div_uuid]').forEach(section_div_wrapper => {
        // Create wrapper div for positioning
        const wrapper = document.createElement('div');
        wrapper.className = 'uuid-edit-link-wrapper';
        wrapper.style.position = 'relative';
        wrapper.style.height = '0';
        wrapper.style.display = 'flex';
        wrapper.style.justifyContent = 'flex-end';

        // Create the button
        const btn = document.createElement('button');
        btn.type = 'button';
        btn.textContent = '✏️ Editar HTML';
        btn.className = 'uuid-edit-link';
        btn.style.position = 'absolute';
        btn.style.top = '0';
        btn.style.right = '16px';
        btn.style.zIndex = 1000;
        btn.style.background = '#fff';
        btn.style.padding = '2px 8px';
        btn.style.borderRadius = '4px';
        btn.style.fontSize = '12px';
        btn.style.textDecoration = 'none';
        btn.style.boxShadow = '0 1px 4px rgba(0,0,0,0.1)';
        btn.style.border = '1px solid #ddd';
        btn.style.cursor = 'pointer';

        btn.addEventListener('click', function (e) {
            e.preventDefault();
            showModal(section_div_wrapper);
            return false;
        });

        wrapper.appendChild(btn);
        section_div_wrapper.parentNode.insertBefore(wrapper, section_div_wrapper);
    });
    function showModal(section_div_wrapper) {
        document.querySelectorAll('.uuid-modal').forEach(m => m.remove());
        const modal = document.createElement('div');
        modal.className = 'uuid-modal';
        modal.style.position = 'fixed';
        modal.style.top = 0;
        modal.style.left = 0;
        modal.style.width = '100vw';
        modal.style.height = '100vh';
        modal.style.background = 'rgba(0,0,0,0.4)';
        modal.style.display = 'flex';
        modal.style.alignItems = 'center';
        modal.style.justifyContent = 'center';
        modal.style.zIndex = 9999;
        const modalContent = document.createElement('div');
        modalContent.style.background = '#fff';
        modalContent.style.padding = '24px';
        modalContent.style.borderRadius = '8px';
        modalContent.style.width = '90vw';
        modalContent.style.maxWidth = '700px';
        modalContent.style.boxShadow = '0 4px 32px rgba(0,0,0,0.2)';
        modalContent.style.position = 'relative';
        const closeBtn = document.createElement('button');
        closeBtn.textContent = '×';
        closeBtn.style.position = 'absolute';
        closeBtn.style.top = '8px';
        closeBtn.style.right = '12px';
        closeBtn.style.fontSize = '24px';
        closeBtn.style.background = 'none';
        closeBtn.style.border = 'none';
        closeBtn.style.cursor = 'pointer';
        closeBtn.onclick = () => modal.remove();
        const label = document.createElement('div');
        label.textContent = `Edit HTML for section_div_wrapper uuid="${section_div_wrapper.getAttribute('uuid')}"`;
        label.style.marginBottom = '8px';
        label.style.fontWeight = 'bold';
        const textarea = document.createElement('textarea');
        textarea.style.width = '100%';
        textarea.style.height = '300px';
        textarea.style.color = '#222';
        textarea.style.background = '#fff';
        textarea.value = section_div_wrapper.innerHTML;
        const updateBtn = document.createElement('button');
        updateBtn.type = 'button';
        updateBtn.textContent = 'Update';
        updateBtn.style.marginTop = '12px';
        updateBtn.style.padding = '8px 16px';
        updateBtn.style.background = '#0070f3';
        updateBtn.style.color = '#fff';
        updateBtn.style.border = 'none';
        updateBtn.style.borderRadius = '4px';
        updateBtn.style.cursor = 'pointer';
        updateBtn.onclick = () => {
            modal.remove();
            // Save scroll position
            // const scrollY = window.scrollY;
            // const temp = document.createElement('div');
            // temp.innerHTML = textarea.value.trim();
            // const newSection = temp.querySelector('section[uuid]');


            section_div_wrapper.innerHTML = textarea.value.trim();

            if (newSection) {

                // console.log('Updated HTML for section: ' + section.outerHTML);
                // section.replaceWith(newSection);
                // modal.remove();
                // injectEditLink(newSection);
                // Restore scroll position
                // window.scrollTo({ top: scrollY });
            } else {
                alert('Invalid HTML: must include <section uuid=\"...\">');
            }
        };

        // Helper to inject the edit link into a section
            function injectEditLink(section) {
                if (section.querySelector('.uuid-edit-link')) return;
                        const btn = document.createElement('button');
                        btn.type = 'button';
                        btn.textContent = '✏️ Editar HTML';
                        btn.className = 'uuid-edit-link';
                        btn.style.position = 'absolute';
                        btn.style.top = '8px';
                        btn.style.right = '16px';
                        btn.style.zIndex = 1000;
                        btn.style.background = '#fff';
                        btn.style.padding = '2px 8px';
                        btn.style.borderRadius = '4px';
                        btn.style.fontSize = '12px';
                        btn.style.textDecoration = 'none';
                        btn.style.boxShadow = '0 1px 4px rgba(0,0,0,0.1)';
                        btn.style.border = '1px solid #ddd';
                        btn.style.cursor = 'pointer';
                        section.style.position = 'relative';
                        section.appendChild(btn);
                        btn.addEventListener('click', function (e) {
                            e.preventDefault();
                            e.stopPropagation();
                            showModal(section);
                            return false;
                        });
            }
        modalContent.appendChild(closeBtn);
        modalContent.appendChild(label);
        modalContent.appendChild(textarea);
        modalContent.appendChild(updateBtn);
        modal.appendChild(modalContent);
        document.body.appendChild(modal);
    }
});
</script>
