---
/**
 * ðŸš¨ AUTO-GENERATED FILE. DO NOT EDIT.
 * This file is generated by sync-blog.js and will be overwritten.
 * To customize, edit the template.
*/

// Open Graph meta tags component with all supported types
export interface Props {
    title?: string;
    description?: string;
    keywords?: string[];
    url?: string;
    image?: string;
    imageWidth?: number | string; // Open Graph image width (optional)
    imageHeight?: number | string; // Open Graph image height (optional)
    imageAlt?: string; // Open Graph image alt text (optional)
    canonicalUrl?: string;
    siteName?: string;
    type?: 'website' | 'article' | 'book' | 'profile' | 
           'music.song' | 'music.album' | 'music.playlist' | 'music.radio_station' |
           'video.movie' | 'video.episode' | 'video.tv_show' | 'video.other' |
           'business.business' | 'place' | 'restaurant.menu' | 'restaurant.menu_item' | 
           'restaurant.menu_section' | 'restaurant.restaurant' |
           'product' | 'product.group' | 'product.item' |
           'game.achievement' | 'fitness.course';
    locale?: string;
    // Additional props for specific types
    author?: string;        // For articles
    publishedTime?: string; // For articles
    modifiedTime?: string;  // For articles
    section?: string;       // For articles
    tags?: string[];        // For articles
}

const { 
    title,
    description,
    keywords,
    url,
    image,
    imageWidth,
    imageHeight,
    imageAlt,
    canonicalUrl,
    siteName,
    type = 'website',
    locale = 'pt-BR',
    author,
    publishedTime,
    modifiedTime,
    section,
    tags,

    
} = Astro.props;
---

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
{url && <meta property="og:url" content={url} />}
{title && <meta property="og:title" content={title} />}
{description && <meta property="og:description" content={description} />}
{image && <meta property="og:image" content={image} />}
{imageWidth && <meta property="og:image:width" content={`${imageWidth}`} />}
{imageHeight && <meta property="og:image:height" content={`${imageHeight}`} />}
{imageAlt && <meta property="og:image:alt" content={imageAlt} />}
{siteName && <meta property="og:site_name" content={siteName} />}
<meta property="og:locale" content={locale} />

<!-- Article-specific meta tags -->
{type === 'article' && author && <meta property="article:author" content={author} />}
{type === 'article' && publishedTime && <meta property="article:published_time" content={publishedTime} />}
{type === 'article' && modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
{type === 'article' && section && <meta property="article:section" content={section} />}
{type === 'article' && tags && tags.map(tag => <meta property="article:tag" content={tag} />)}